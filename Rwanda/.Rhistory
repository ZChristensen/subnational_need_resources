list.of.packages <- c("data.table","readr","reshape2","ggplot2","readxl","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
wd = "E:/git/subnational_need_resources/Rwanda"
setwd(wd)
r2=function(x,y){round(summary(lm(x ~ y))$r.squared,4)}
MPIsubnational=read_xlsx("E:/git/MPI_recalc/MPI_downloads/Table-5-Subnational-MPI-2018-1.xlsx", sheet="5.5 Raw Headcounts Region",range=cell_rows(9:1138))
MPIsubnational=MPIsubnational[,c(
"ISO Num code"
,"ISO Code"
,"Country"
,"World region"
,"Survey Name"
,"Survey year"
,"Subnational \r\nregion"
,"MPI of the country"
,"MPI of the region"
,"Nutrition"
,"Child mortality"
,"Years of schooling"
,"School attendance"
,"Cooking \r\nfuel"
,"Sanitation"
,"Drinking water"
,"Electricity"
,"Housing"
,"Assets"
,"Pop survey year"
,"Population 2015"
,"Population 2016"
,"Population share by region"
,"Population size by \r\nregion"
,"Total number of indicators included \r\n(out of ten)"
,"Indicator (s) missing"
)]
MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
names(MPIsubnational)=make.names(names(MPIsubnational))
MPIsubnational$County=MPIsubnational$Subnational...region
MPIsubnational$School.attendance=MPIsubnational$School.attendance/100
MPIsubnational$Child.mortality=MPIsubnational$Child.mortality/100
MPIsubnational$Years.of.schooling=MPIsubnational$Years.of.schooling/100
funding=read_excel("input/Rwanda_total_education_and_health_spending_by_district.xlsx",sheet="Rwanda_educ_health_spending ($)")
names(funding)
names(funding)=make.names(names(funding))
list.of.packages <- c("data.table","readr","foreign")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
if(Sys.info()[["user"]]=="Alex"){
prefix = "C:"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/mpi_recalc/pov")
setwd(wd)
weighted.percentile <- function(x,w,prob,na.rm=TRUE){
df <- data.frame(x,w)
if(na.rm){
df <- df[which(complete.cases(df)),]
}
#Sort
df <- df[order(df$x),]
sumw <- sum(df$w)
df$cumsumw <- cumsum(df$w)
#For each percentile
cutList <- c()
cutNames <-c()
for(i in 1:length(prob)){
p <- prob[i]
pStr <- paste0(round(p*100,digits=2),"%")
sumwp <- sumw*p
df$above.prob <- df$cumsumw>=sumwp
thisCut <- df$x[which(df$above.prob==TRUE)[1]]
cutList <- c(cutList,thisCut)
cutNames <- c(cutNames,pStr)
}
names(cutList) <- cutNames
return(cutList)
}
rawMPI=read.dta("rwa_dhs14-15_pov.dta",convert.factors = T)
rawMPI$sample.weights=rawMPI$hv005/100000
rawMPI$wealth=rawMPI$hv271/100000
rawMPI$MPI.A=((rawMPI$d_cm+rawMPI$d_nutr)*(1/6))+((rawMPI$d_satt+rawMPI$d_educ)*(1/6))+((rawMPI$d_elct+rawMPI$d_ckfl+rawMPI$d_sani+rawMPI$d_hsg+rawMPI$d_asst+rawMPI$d_wtr)*(1/18))
rawMPI$MPI.H=(rawMPI$MPI.A>(1/3))*1
cuts=c(.8611,.5150,.2)
describe(rawMPI$MPI.H)
povperc <- weighted.percentile(rawMPI$wealth,rawMPI$sample.weights,prob=cuts)
rawMPI$p20 <- (rawMPI$wealth < povperc[1])
rawMPI$ext <- (rawMPI$wealth < povperc[2])
rawMPI$np20<- (rawMPI$wealth < povperc[3])
county=data.table(rawMPI)[,.(
Child.mortality=weighted.mean(d_cm, sample.weights,na.rm=T)
,Nutrition=weighted.mean(d_nutr, sample.weights,na.rm=T)
,School.attendance=weighted.mean(d_satt, sample.weights,na.rm=T)
,Years.of.schooling=weighted.mean(d_educ, sample.weights,na.rm=T)
,Electricity=weighted.mean(d_elct, sample.weights,na.rm=T)
,Drinking.water=weighted.mean(d_wtr, sample.weights,na.rm=T)
,Sanitation=weighted.mean(d_sani, sample.weights,na.rm=T)
,Housing=weighted.mean(d_hsg, sample.weights,na.rm=T)
,Assets=weighted.mean(d_asst, sample.weights,na.rm=T)
,Cooking...fuel=weighted.mean(d_ckfl, sample.weights,na.rm=T)
,MPI.A=weighted.mean(MPI.A,sample.weights,na.rm=T)
,MPI.H=weighted.mean(MPI.H,sample.weights,na.rm=T)
,p20=weighted.mean(p20,sample.weights,na.rm=T)
,ext=weighted.mean(ext,sample.weights,na.rm=T)
,np20=weighted.mean(np20,sample.weights,na.rm=T)
,weights=sum(sample.weights)
),by=c("shregion")]
names(rawMPI)
unique(rawMPI$shdistrict)
district=data.table(rawMPI)[,.(
Child.mortality=weighted.mean(d_cm, sample.weights,na.rm=T)
,Nutrition=weighted.mean(d_nutr, sample.weights,na.rm=T)
,School.attendance=weighted.mean(d_satt, sample.weights,na.rm=T)
,Years.of.schooling=weighted.mean(d_educ, sample.weights,na.rm=T)
,Electricity=weighted.mean(d_elct, sample.weights,na.rm=T)
,Drinking.water=weighted.mean(d_wtr, sample.weights,na.rm=T)
,Sanitation=weighted.mean(d_sani, sample.weights,na.rm=T)
,Housing=weighted.mean(d_hsg, sample.weights,na.rm=T)
,Assets=weighted.mean(d_asst, sample.weights,na.rm=T)
,Cooking...fuel=weighted.mean(d_ckfl, sample.weights,na.rm=T)
,MPI.A=weighted.mean(MPI.A,sample.weights,na.rm=T)
,MPI.H=weighted.mean(MPI.H,sample.weights,na.rm=T)
,p20=weighted.mean(p20,sample.weights,na.rm=T)
,ext=weighted.mean(ext,sample.weights,na.rm=T)
,np20=weighted.mean(np20,sample.weights,na.rm=T)
,weights=sum(sample.weights)
),by=c("shdistrict")]
View(district)
list.of.packages <- c("data.table","readr","foreign")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
if(Sys.info()[["user"]]=="Alex"){
prefix = "C:"
}else{
prefix = "E:"
}
wd = paste0(prefix,"/git/mpi_recalc/pov")
setwd(wd)
weighted.percentile <- function(x,w,prob,na.rm=TRUE){
df <- data.frame(x,w)
if(na.rm){
df <- df[which(complete.cases(df)),]
}
#Sort
df <- df[order(df$x),]
sumw <- sum(df$w)
df$cumsumw <- cumsum(df$w)
#For each percentile
cutList <- c()
cutNames <-c()
for(i in 1:length(prob)){
p <- prob[i]
pStr <- paste0(round(p*100,digits=2),"%")
sumwp <- sumw*p
df$above.prob <- df$cumsumw>=sumwp
thisCut <- df$x[which(df$above.prob==TRUE)[1]]
cutList <- c(cutList,thisCut)
cutNames <- c(cutNames,pStr)
}
names(cutList) <- cutNames
return(cutList)
}
rawMPI=read.dta("rwa_dhs14-15_pov.dta",convert.factors = T)
rawMPI$sample.weights=rawMPI$hv005/100000
rawMPI$wealth=rawMPI$hv271/100000
rawMPI$MPI.A=((rawMPI$d_cm+rawMPI$d_nutr)*(1/6))+((rawMPI$d_satt+rawMPI$d_educ)*(1/6))+((rawMPI$d_elct+rawMPI$d_ckfl+rawMPI$d_sani+rawMPI$d_hsg+rawMPI$d_asst+rawMPI$d_wtr)*(1/18))
rawMPI$MPI.H=(rawMPI$MPI.A>(1/3))*1
cuts=c(.8611,.5150,.2)
povperc <- weighted.percentile(rawMPI$wealth,rawMPI$sample.weights,prob=cuts)
rawMPI$p20 <- (rawMPI$wealth < povperc[1])
rawMPI$ext <- (rawMPI$wealth < povperc[2])
rawMPI$np20<- (rawMPI$wealth < povperc[3])
district=data.table(rawMPI)[,.(
Child.mortality=weighted.mean(d_cm, sample.weights,na.rm=T)
,Nutrition=weighted.mean(d_nutr, sample.weights,na.rm=T)
,School.attendance=weighted.mean(d_satt, sample.weights,na.rm=T)
,Years.of.schooling=weighted.mean(d_educ, sample.weights,na.rm=T)
,Electricity=weighted.mean(d_elct, sample.weights,na.rm=T)
,Drinking.water=weighted.mean(d_wtr, sample.weights,na.rm=T)
,Sanitation=weighted.mean(d_sani, sample.weights,na.rm=T)
,Housing=weighted.mean(d_hsg, sample.weights,na.rm=T)
,Assets=weighted.mean(d_asst, sample.weights,na.rm=T)
,Cooking...fuel=weighted.mean(d_ckfl, sample.weights,na.rm=T)
,MPI.A=weighted.mean(MPI.A,sample.weights,na.rm=T)
,MPI.H=weighted.mean(MPI.H,sample.weights,na.rm=T)
,p20=weighted.mean(p20,sample.weights,na.rm=T)
,ext=weighted.mean(ext,sample.weights,na.rm=T)
,np20=weighted.mean(np20,sample.weights,na.rm=T)
,weights=sum(sample.weights)
),by=c("shdistrict")]
district$MPI=district$MPI.A*district$MPI.H
weights=sum(rawMPI$sample.weight)
district$share.of.pop=district$weights/weights
fwrite(district,"E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
#   ,"Population 2015"
#   ,"Population 2016"
#   ,"Population share by region"
#   ,"Population size by \r\nregion"
#   ,"Total number of indicators included \r\n(out of ten)"
#   ,"Indicator (s) missing"
# )]
# MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPI_subnational=read.csv("input/Rwanda_MPI_district.csv")
#   ,"Population 2015"
#   ,"Population 2016"
#   ,"Population share by region"
#   ,"Population size by \r\nregion"
#   ,"Total number of indicators included \r\n(out of ten)"
#   ,"Indicator (s) missing"
# )]
# MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPI_subnational=read.csv("E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
#   ,"Population 2015"
#   ,"Population 2016"
#   ,"Population share by region"
#   ,"Population size by \r\nregion"
#   ,"Total number of indicators included \r\n(out of ten)"
#   ,"Indicator (s) missing"
# )]
# MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPIsubnational=read.csv("E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
names(MPIsubnational)
MPIsubnational=read_xlsx("E:/git/MPI_recalc/MPI_downloads/Table-5-Subnational-MPI-2018-1.xlsx", sheet="5.5 Raw Headcounts Region",range=cell_rows(9:1138))
MPIsubnational=MPIsubnational[,c(
"ISO Num code"
,"ISO Code"
,"Country"
,"World region"
,"Survey Name"
,"Survey year"
,"Subnational \r\nregion"
,"MPI of the country"
,"MPI of the region"
,"Nutrition"
,"Child mortality"
,"Years of schooling"
,"School attendance"
,"Cooking \r\nfuel"
,"Sanitation"
,"Drinking water"
,"Electricity"
,"Housing"
,"Assets"
,"Pop survey year"
,"Population 2015"
,"Population 2016"
,"Population share by region"
,"Population size by \r\nregion"
,"Total number of indicators included \r\n(out of ten)"
,"Indicator (s) missing"
)]
MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
MPIpop=unique(MPIsubnational$`Population 2016`)
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPIsubnational=read.csv("E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
names(MPIsubnational)
MPIsubnational$nationalpop=MPIsubnational$share.of.pop*MPIpop
MPIsubnational$Population.size.by...region=MPIsubnational$share.of.pop*MPIpop
View(MPIsubnational)
funding=read_excel("input/Rwanda_total_education_and_health_spending_by_district.xlsx",sheet="Rwanda_educ_health_spending ($)")
wd = "E:/git/subnational_need_resources/Rwanda"
setwd(wd)
funding=read_excel("input/Rwanda_total_education_and_health_spending_by_district.xlsx",sheet="Rwanda_educ_health_spending ($)")
names(funding)=make.names(names(funding))
setdiff(funding$District,MPIsubnational$shdistrict)
setnames(funding,"District","region")
setnames(MPIsubnational,"shdistrict","region")
funding$region=toupper(funding$region)
MPIsubnational$region=toupper(MPIsubnational$region)
setdiff(funding$region,MPIsubnational$region)
setdiff(MPIsubnational$region,funding$region)
unique(MPIsubnational)
unique(MPIsubnational$region)
dat=merge(funding,MPIsubnational,by=c("region"))
dat$MPI.pop.2016=dat$Population.size.by...region*1000
?dcast
View(funding)
fundingwide=dcast(funding,region~year)
fundingwide=dcast(funding,region~Year)
View(fundingwide)
View(fundingwide)
fundingwide=dcast(funding,region~Year+Education.spending.US..per.capita+Health.Spending.US..per.capita)
names(funding)
fundingwide=dcast(funding,region~Year+Education.spending..US...per.capita+Health.Spending..US...per.capita)
View(fundingwide)
fundingwide=dcast(funding,region~Year+Education.spending..US...per.capita+Health.Spending..US...per.capita)
m=melt(funding,id.vars=c("region","Year"))
fundingwide=dcast(m,region~Year+variable)
View(fundingwide)
list.of.packages <- c("data.table","readr","reshape2","ggplot2","readxl","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
wd = "E:/git/subnational_need_resources/Rwanda"
setwd(wd)
r2=function(x,y){round(summary(lm(x ~ y))$r.squared,4)}
MPIsubnational=read_xlsx("E:/git/MPI_recalc/MPI_downloads/Table-5-Subnational-MPI-2018-1.xlsx", sheet="5.5 Raw Headcounts Region",range=cell_rows(9:1138))
MPIsubnational=MPIsubnational[,c(
"ISO Num code"
,"ISO Code"
,"Country"
,"World region"
,"Survey Name"
,"Survey year"
,"Subnational \r\nregion"
,"MPI of the country"
,"MPI of the region"
,"Nutrition"
,"Child mortality"
,"Years of schooling"
,"School attendance"
,"Cooking \r\nfuel"
,"Sanitation"
,"Drinking water"
,"Electricity"
,"Housing"
,"Assets"
,"Pop survey year"
,"Population 2015"
,"Population 2016"
,"Population share by region"
,"Population size by \r\nregion"
,"Total number of indicators included \r\n(out of ten)"
,"Indicator (s) missing"
)]
MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
MPIpop=unique(MPIsubnational$`Population 2016`)
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPIsubnational=read.csv("E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
MPIsubnational$Population.size.by...region=MPIsubnational$share.of.pop*MPIpop
funding=read_excel("input/Rwanda_total_education_and_health_spending_by_district.xlsx",sheet="Rwanda_educ_health_spending ($)")
names(funding)=make.names(names(funding))
setnames(funding,"District","region")
setnames(MPIsubnational,"shdistrict","region")
funding$region=toupper(funding$region)
MPIsubnational$region=toupper(MPIsubnational$region)
m=melt(funding,id.vars=c("region","Year"))
fundingwide=dcast(m,region~Year+variable)
dat=merge(fundingwide,MPIsubnational,by=c("region"))
dat$MPI.pop.2016=dat$Population.size.by...region*1000
names(dat)
View(funding)
list.of.packages <- c("data.table","readr","reshape2","ggplot2","readxl","openxlsx")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=T)
wd = "E:/git/subnational_need_resources/Rwanda"
setwd(wd)
r2=function(x,y){round(summary(lm(x ~ y))$r.squared,4)}
MPIsubnational=read_xlsx("E:/git/MPI_recalc/MPI_downloads/Table-5-Subnational-MPI-2018-1.xlsx", sheet="5.5 Raw Headcounts Region",range=cell_rows(9:1138))
MPIsubnational=MPIsubnational[,c(
"ISO Num code"
,"ISO Code"
,"Country"
,"World region"
,"Survey Name"
,"Survey year"
,"Subnational \r\nregion"
,"MPI of the country"
,"MPI of the region"
,"Nutrition"
,"Child mortality"
,"Years of schooling"
,"School attendance"
,"Cooking \r\nfuel"
,"Sanitation"
,"Drinking water"
,"Electricity"
,"Housing"
,"Assets"
,"Pop survey year"
,"Population 2015"
,"Population 2016"
,"Population share by region"
,"Population size by \r\nregion"
,"Total number of indicators included \r\n(out of ten)"
,"Indicator (s) missing"
)]
MPIsubnational=MPIsubnational[which(MPIsubnational$Country=="Rwanda"),]
MPIpop=unique(MPIsubnational$`Population 2016`)
# names(MPIsubnational)=make.names(names(MPIsubnational))
# MPIsubnational$County=MPIsubnational$Subnational...region
MPIsubnational=read.csv("E:/git/subnational_need_resources/Rwanda/input/Rwanda_MPI_district.csv")
MPIsubnational$Population.size.by...region=MPIsubnational$share.of.pop*MPIpop
funding=read_excel("input/Rwanda_total_education_and_health_spending_by_district.xlsx",sheet="Rwanda_educ_health_spending ($)")
names(funding)=make.names(names(funding))
setnames(funding,"District","region")
setnames(MPIsubnational,"shdistrict","region")
funding$region=toupper(funding$region)
MPIsubnational$region=toupper(MPIsubnational$region)
m=melt(funding,id.vars=c("region","Year"))
fundingwide=dcast(m,region~Year+variable)
dat=merge(fundingwide,MPIsubnational,by=c("region"))
dat$MPI.pop.2016=dat$Population.size.by...region*1000
dat$health.per.cap.ave=(dat$`16/17_Health.spending..US...per.capita.`+
dat$`17/18_Health.spending..US...per.capita.`+
dat$`18/19_Health.spending..US...per.capita.`)/3
dat$educ.per.cap.ave=(dat$`16/17_Education.spending..US...per.capita.`+
dat$`17/18_Education.spending..US...per.capita.`+
dat$`18/19_Education.spending..US...per.capita.`)/3
dat$educ.and.health.per.cap.ave=dat$health.per.cap.ave+dat$educ.per.cap.ave
ggplot(dat, aes(y=educ.and.health.per.cap.ave,x=MPI.of.the.region,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$educ.and.health.per.cap.ave)),x=.9*(max(dat$MPI.of.the.region)),label=paste("R^2: ",r2(dat$educ.and.health.per.cap.ave,dat$MPI.of.the.region)), parse=T)+
labs(title="Health and education government spending and MPI",y="Government health and education spending\nper capita",x="Multidimensional poverty index")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)
ggsave("graphics/health_edu_MPI.png")
ggplot(dat, aes(y=health.per.cap.ave,x=Child.mortality,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$health.per.cap.ave)),x=.9*(max(dat$Child.mortality)),label=paste("R^2: ",r2(dat$health.per.cap.ave,dat$Child.mortality)), parse=T)+
labs(title="Government health spending and child mortality",y="Health government spending\nper capita",x="Households having experienced a child mortality in last 5 years")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)+
scale_x_continuous(labels=scales::percent)
ggsave("graphics/health_gov_Child_mortality.png")
ggplot(dat, aes(y=educ.per.cap.ave,x=School.attendance,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$educ.per.cap.ave)),x=.9*(max(dat$School.attendance)),label=paste("R^2: ",r2(dat$educ.per.cap.ave,dat$School.attendance)), parse=T)+
labs(title="Government education spending and school attendance",y="Average annual government spending\nper capita",x="Households with a child not attending school")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)+
scale_x_continuous(labels=scales::percent)
ggsave("graphics/education_gov_absenteeism.png")
ggplot(dat, aes(y=educ.and.health.ODA,x=MPI.of.the.region,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$educ.and.health.ODA)),x=.9*(max(dat$MPI.of.the.region)),label=paste("R^2: ",r2(dat$educ.and.health.ODA,dat$MPI.of.the.region)), parse=T)+
labs(title="Health and education ODA and MPI",y="Health and education ODA\nper capita",x="Multidimensional poverty index")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)
ggsave("graphics/health_edu_MPI.png")
ggplot(dat, aes(y=educ.and.health.per.cap.ave,x=MPI.of.the.region,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$educ.and.health.per.cap.ave)),x=.9*(max(dat$MPI.of.the.region)),label=paste("R^2: ",r2(dat$educ.and.health.per.cap.ave,dat$MPI.of.the.region)), parse=T)+
labs(title="Health and education government spending and MPI",y="Government health and education spending\nper capita",x="Multidimensional poverty index")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)
names(dat)
setnames(dat,"MPI","MPI.of.the.region")
ggplot(dat, aes(y=educ.and.health.per.cap.ave,x=MPI.of.the.region,label=County))+
geom_point(color="grey")+
geom_text(check_overlap=T,  size=2.5)+
geom_text(y=.9*(max(dat$educ.and.health.per.cap.ave)),x=.9*(max(dat$MPI.of.the.region)),label=paste("R^2: ",r2(dat$educ.and.health.per.cap.ave,dat$MPI.of.the.region)), parse=T)+
labs(title="Health and education government spending and MPI",y="Government health and education spending\nper capita",x="Multidimensional poverty index")+
theme_classic()+
theme(legend.title=element_blank())+
scale_y_continuous(labels=scales::dollar)
names(dat)
dat$health.per.cap.ave=(dat$`16/17_Health.spending..US...per.capita.`+
dat$`17/18_Health.spending..US...per.capita.`+
dat$`18/19_Health.spending..US...per.capita.`)/3
dat$health.per.cap.ave=(dat$`16/17_Health.Spending..US...per.capita`+
dat$`17/18_Health.spending..US...per.capita`+
dat$`18/19_Health.spending..US...per.capita`)/3
is.numeric(dat$`16/17_Education.spending..US...per.capita`)
is.numeric(dat$`17/18_Education.spending..US...per.capita`)
is.numeric(dat$`18/19_Education.spending..US...per.capita`)
dat$health.per.cap.ave=(dat$`16/17_Health.Spending..US...per.capita`+
dat$`17/18_Health.spending..US...per.capita`+
dat$`18/19_Health.spending..US...per.capita`)/3
dat$health.per.cap.ave=(dat$`16/17_Health.Spending..US...per.capita`+
dat$`17/18_Health.spending..US...per.capita`+
dat$`18/19_Health.spending..US...per.capita`)
dat$health.per.cap.ave=(dat$`16/17_Health.Spending..US...per.capita`+dat$`17/18_Health.spending..US...per.capita`+dat$`18/19_Health.spending..US...per.capita`)
dat$health.per.cap.ave=mean(dat$`16/17_Health.Spending..US...per.capita`,dat$`17/18_Health.spending..US...per.capita`,dat$`18/19_Health.spending..US...per.capita`)
?mean
dat$health.per.cap.ave=mean(dat$`16/17_Health.Spending..US...per.capita`,dat$`17/18_Health.spending..US...per.capita`,dat$`18/19_Health.spending..US...per.capita`,na.rm=F)
describe(dat$`16/17_Health.Spending..US...per.capita`)
describe(dat$`17/18_Health.spending..US...per.capita`)
describe(dat$`18/19_Health.spending..US...per.capita`)
View(fundingwide)
dat$health.per.cap.ave=mean(dat$`16/17_Health.Spending..US...per.capita`,dat$`17/18_Health.spending..US...per.capita`,dat$`18/19_Health.spending..US...per.capita`,na.rm=T)
dat$`16/17_Health.Spending..US...per.capita`[which(is.na(dat$`16/17_Health.Spending..US...per.capita`))]=0
dat$`17/18_Health.Spending..US...per.capita`[which(is.na(dat$`17/18_Health.Spending..US...per.capita`))]=0
dat$`16/17_Health.Spending..US...per.capita`[which(is.na(dat$`16/17_Health.Spending..US...per.capita`))]=0
dat$`17/18_Health.Spending..US...per.capita`[which(is.na(dat$`17/18_Health.Spending..US...per.capita`))]=0
dat$`18/19_Health.Spending..US...per.capita`[which(is.na(dat$`18/19_Health.Spending..US...per.capita`))]=0
dat$health.per.cap.ave=mean(dat$`16/17_Health.Spending..US...per.capita`,dat$`17/18_Health.spending..US...per.capita`,dat$`18/19_Health.spending..US...per.capita`,na.rm=T)
View(dat)
fwrite(dat,"input/dat.csv")
getwd()
fwrite(dat,"input/dat.csv")
fwrite(dat,"E:/git/subnational_need_resources/Rwanda/input/dat.csv")
# fwrite(dat,"E:/git/subnational_need_resources/Rwanda/input/dat.csv")
dat=read.csv("input/dat.csv")
# fwrite(dat,"E:/git/subnational_need_resources/Rwanda/input/dat.csv")
dat2=read.csv("E:/git/subnational_need_resources/Rwanda/input/dat.csv")
View(dat2)
# fwrite(dat,"E:/git/subnational_need_resources/Rwanda/input/dat.csv")
dat=read.csv("E:/git/subnational_need_resources/Rwanda/input/dat.csv")
dat$health.per.cap.ave=mean(dat$Health.Spending..US...per.capita_16,dat$Health.Spending..US...per.capita_17,dat$Health.Spending..US...per.capita_18)
